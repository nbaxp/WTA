@using WTA.Infrastructure.Web.Extensions
@inject IStringLocalizer localizer
@{
    var action = Url.Action();
}
@section scripts{
    <template id="page">
        <h1>{{schema.title}}</h1>
        <app-form ref="formRef" v-model="model" mode="create">
            <template #footer>
                <el-form-item>
                    <el-button type="primary" @@click="submit">@localizer["Confirm"]</el-button>
                </el-form-item>
            </template>
        </app-form>
    </template>
    <script type="module">
        import { ref, reactive } from 'vue';
        import { ElMessage } from 'element-plus';

        window.page = {
            template: '#page',
            setup() {
                const url = ref('@action');
                var model = reactive(@Json.Serialize(Model));
                var errors = reactive(@Json.Serialize(ViewData.ModelState.ToErrors()));
                var schema = reactive(@Json.Serialize(ViewData.ModelMetadata.GetSchema(ViewContext.HttpContext.RequestServices)));

                const submit = async () => {
                    //var options = {
                    //    method: 'post',
                    //    credentials: 'include',
                    //    headers: {
                    //        'Content-Type': 'application/json',
                    //        'Accept': 'application/json'
                    //    },
                    //    body: JSON.stringify(model);
                    //};
                    try {
                        await formRef.value.validate();
                        ElMessage.success('验证成功');
                        console.log('data:');
                        console.log(model.data);
                        //fetch(url, options);
                    } catch (error) {
                        console.error(error);
                        ElMessage.error('验证失败');
                    }
                };

                return {
                    url,
                    model,
                    errors,
                    schema,
                    submit
                }
            }
        };
    </script>
}
